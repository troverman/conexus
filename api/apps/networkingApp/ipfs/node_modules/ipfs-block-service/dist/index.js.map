{"version":3,"sources":["/home/vmx/src/pl/js-ipfs-block-service/webpack/universalModuleDefinition","/home/vmx/src/pl/js-ipfs-block-service/webpack/bootstrap","/home/vmx/src/pl/js-ipfs-block-service/src/index.js","/home/vmx/src/pl/js-ipfs-block-service/node_modules/streaming-iterables/dist/index-esm.js","/home/vmx/src/pl/js-ipfs-block-service/node_modules/process/browser.js","/home/vmx/src/pl/js-ipfs-block-service/node_modules/@babel/runtime/regenerator/index.js","/home/vmx/src/pl/js-ipfs-block-service/node_modules/regenerator-runtime/runtime.js","/home/vmx/src/pl/js-ipfs-block-service/node_modules/webpack/buildin/module.js"],"names":["require","map","BlockService","ipfsRepo","_repo","_bitswap","bitswap","block","hasExchange","put","blocks","putMany","cid","get","cids","Array","isArray","Error","getMany","getRepoBlocks","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;AClFA;;;;;;;;eAEgBA,mBAAO,CAAC,CAAD,C;IAAfC,G,YAAAA,G;AAER;;;;;;;IAKMC,Y;;;AACJ;;;;;AAKA,wBAAaC,QAAb,EAAuB;AAAA;;AACrB,SAAKC,KAAL,GAAaD,QAAb;AACA,SAAKE,QAAL,GAAgB,IAAhB;AACD;AAED;;;;;;;;;;;;;;gCAUaC,O,EAAS;AACpB,WAAKD,QAAL,GAAgBC,OAAhB;AACD;AAED;;;;;;;;oCAKiB;AACf,WAAKD,QAAL,GAAgB,IAAhB;AACD;AAED;;;;;;;;kCAKe;AACb,aAAO,KAAKA,QAAL,IAAiB,IAAxB;AACD;AAED;;;;;;;;;wBAMKE,K,EAAO;AACV,UAAI,KAAKC,WAAL,EAAJ,EAAwB;AACtB,eAAO,KAAKH,QAAL,CAAcI,GAAd,CAAkBF,KAAlB,CAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAKH,KAAL,CAAWM,MAAX,CAAkBD,GAAlB,CAAsBF,KAAtB,CAAP;AACD;AACF;AAED;;;;;;;;;4BAMSG,M,EAAQ;AACf,UAAI,KAAKF,WAAL,EAAJ,EAAwB;AACtB,eAAO,KAAKH,QAAL,CAAcM,OAAd,CAAsBD,MAAtB,CAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,OAAlB,CAA0BD,MAA1B,CAAP;AACD;AACF;AAED;;;;;;;;;wBAMKE,G,EAAK;AACR,UAAI,KAAKJ,WAAL,EAAJ,EAAwB;AACtB,eAAO,KAAKH,QAAL,CAAcQ,GAAd,CAAkBD,GAAlB,CAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAKR,KAAL,CAAWM,MAAX,CAAkBG,GAAlB,CAAsBD,GAAtB,CAAP;AACD;AACF;AAED;;;;;;;;;4BAMSE,I,EAAM;AAAA;;AACb,UAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAL,EAA0B;AACxB,cAAM,IAAIG,KAAJ,CAAU,oCAAV,CAAN;AACD;;AAED,UAAI,KAAKT,WAAL,EAAJ,EAAwB;AACtB,eAAO,KAAKH,QAAL,CAAca,OAAd,CAAsBJ,IAAtB,CAAP;AACD,OAFD,MAEO;AACL,YAAMK,aAAa,GAAGlB,GAAG,CAAC,UAACW,GAAD;AAAA,iBAAS,KAAI,CAACR,KAAL,CAAWM,MAAX,CAAkBG,GAAlB,CAAsBD,GAAtB,CAAT;AAAA,SAAD,CAAzB;AACA,eAAOO,aAAa,CAACL,IAAD,CAApB;AACD;AACF;AAED;;;;;;;;;4BAMQF,G,EAAK;AACX,aAAO,KAAKR,KAAL,CAAWM,MAAX,WAAyBE,GAAzB,CAAP;AACD;;;;;;AAGHQ,MAAM,CAACC,OAAP,GAAiBnB,YAAjB,C;;;;;;;AC5HA,+CAAa;;AAEb;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,mBAAO,CAAC,CAA4B;;AAE9E,sCAAsC,uCAAuC,kBAAkB;;AAE/F,iCAAiC,oFAAoF;;AAErH,6BAA6B,6EAA6E;;AAE1G,wCAAwC,eAAe,eAAe,gBAAgB,oBAAoB,MAAM,0CAA0C,+BAA+B,aAAa,qBAAqB,mCAAmC,EAAE,EAAE,cAAc,WAAW,UAAU,EAAE,UAAU,MAAM,iDAAiD,EAAE,UAAU,kBAAkB,EAAE,EAAE,aAAa;;AAEvZ,+BAA+B,oCAAoC;;AAEnE,2CAA2C,kBAAkB,kCAAkC,qEAAqE,EAAE,EAAE,OAAO,kBAAkB,EAAE,YAAY;;AAE/M,4EAA4E,MAAM,0BAA0B,wBAAwB,EAAE,gBAAgB,eAAe,QAAQ,EAAE,iBAAiB,gBAAgB,EAAE,OAAO,4CAA4C,EAAE;;AAEvQ,gCAAgC,qBAAqB,mCAAmC,gDAAgD,gCAAgC,wBAAwB,wEAAwE,EAAE,uBAAuB,uEAAuE,EAAE,kBAAkB,EAAE,EAAE,GAAG;;AAEnY;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA,GAAG;AACH;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,yGAAyG;AACzG;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,0EAA0E,aAAa;AACvF;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,KAAK,EAAE,EAGV;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6EAA6E,eAAe;AAC5F;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;;AAEA,2FAA2F,eAAe;AAC1G;AACA;;AAEA,+BAA+B,mBAAmB;AAClD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA,gBAAgB,KAAK,EAAE,EAGV;;AAEb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA,6EAA6E,eAAe;AAC5F;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,iBAAiB;;AAEjB;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wDAAwD,mEAAmE;AAC3H;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,KAAK,EAAE,EAGV;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,KAAK,EAAE,EAGV;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,KAAK,EAAE,EAGV;;AAEX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA,C;;;;;;;;AC3uGa;;AAEb;AACA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;ACjNA,iBAAiB,mBAAO,CAAC,CAAqB;;;;;;;;ACA9C,8CAAa;;AAEb,uBAAuB,2EAA2E,kCAAkC,mBAAmB,GAAG,EAAE,OAAO,kCAAkC,8HAA8H,GAAG,EAAE,qBAAqB;;AAE7V;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;;AAEA;AACA;AACA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA,4BAA4B;AAC5B;AACA;AACA;;AAEA;;AAEA;;AAEA,0CAA0C;AAC1C;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA,sGAAsG;AACtG;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,wCAAwC;AACxC,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,oCAAoC,cAAc;AAClD;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD;;AAEhD,sCAAsC;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA,GAAG,gCAAgC,kBAAkB;AACrD;;;AAGA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB;AACnB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,8CAA8C,QAAQ;AACtD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;AACL;AACA,8CAA8C,QAAQ;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,8CAA8C,QAAQ;AACtD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;;AAGA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC,MAA6B,GAAG,SAAW,sDAAsD;;AAElG;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;ACpsBa;;AAEb;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,E","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"IpfsBlockService\"] = factory();\n\telse\n\t\troot[\"IpfsBlockService\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict'\n\nconst { map } = require('streaming-iterables')\n\n/**\n * BlockService is a hybrid block datastore. It stores data in a local\n * datastore and may retrieve data from a remote Exchange.\n * It uses an internal `datastore.Datastore` instance to store values.\n */\nclass BlockService {\n  /**\n   * Create a new BlockService\n   *\n   * @param {IPFSRepo} ipfsRepo\n   */\n  constructor (ipfsRepo) {\n    this._repo = ipfsRepo\n    this._bitswap = null\n  }\n\n  /**\n   * Add a bitswap instance that communicates with the\n   * network to retreive blocks that are not in the local store.\n   *\n   * If the node is online all requests for blocks first\n   * check locally and afterwards ask the network for the blocks.\n   *\n   * @param {Bitswap} bitswap\n   * @returns {void}\n   */\n  setExchange (bitswap) {\n    this._bitswap = bitswap\n  }\n\n  /**\n   * Go offline, i.e. drop the reference to bitswap.\n   *\n   * @returns {void}\n   */\n  unsetExchange () {\n    this._bitswap = null\n  }\n\n  /**\n   * Is the blockservice online, i.e. is bitswap present.\n   *\n   * @returns {bool}\n   */\n  hasExchange () {\n    return this._bitswap != null\n  }\n\n  /**\n   * Put a block to the underlying datastore.\n   *\n   * @param {Block} block\n   * @returns {Promise}\n   */\n  put (block) {\n    if (this.hasExchange()) {\n      return this._bitswap.put(block)\n    } else {\n      return this._repo.blocks.put(block)\n    }\n  }\n\n  /**\n   * Put a multiple blocks to the underlying datastore.\n   *\n   * @param {Array<Block>} blocks\n   * @returns {Promise}\n   */\n  putMany (blocks) {\n    if (this.hasExchange()) {\n      return this._bitswap.putMany(blocks)\n    } else {\n      return this._repo.blocks.putMany(blocks)\n    }\n  }\n\n  /**\n   * Get a block by cid.\n   *\n   * @param {CID} cid\n   * @returns {Promise<Block>}\n   */\n  get (cid) {\n    if (this.hasExchange()) {\n      return this._bitswap.get(cid)\n    } else {\n      return this._repo.blocks.get(cid)\n    }\n  }\n\n  /**\n   * Get multiple blocks back from an array of cids.\n   *\n   * @param {Array<CID>} cids\n   * @returns {Iterator<Block>}\n   */\n  getMany (cids) {\n    if (!Array.isArray(cids)) {\n      throw new Error('first arg must be an array of cids')\n    }\n\n    if (this.hasExchange()) {\n      return this._bitswap.getMany(cids)\n    } else {\n      const getRepoBlocks = map((cid) => this._repo.blocks.get(cid))\n      return getRepoBlocks(cids)\n    }\n  }\n\n  /**\n   * Delete a block from the blockstore.\n   *\n   * @param {CID} cid\n   * @returns {Promise}\n   */\n  delete (cid) {\n    return this._repo.blocks.delete(cid)\n  }\n}\n\nmodule.exports = BlockService\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.batch = batch;\nexports.buffer = buffer;\nexports.collect = collect;\nexports.concat = concat;\nexports.consume = consume;\nexports.filter = filter;\nexports.flatMap = flatMap;\nexports.flatten = flatten;\nexports.flatTransform = flatTransform;\nexports.fromStream = fromStream;\nexports.getIterator = getIterator;\nexports.map = map;\nexports.merge = merge;\nexports.parallelFlatMap = parallelFlatMap;\nexports.parallelMap = parallelMap;\nexports.parallelMerge = parallelMerge;\nexports.pipeline = pipeline;\nexports.reduce = reduce;\nexports.take = take;\nexports.tap = tap;\nexports.time = time;\nexports.transform = transform;\nexports.writeToStream = writeToStream;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _marked =\n/*#__PURE__*/\n_regenerator[\"default\"].mark(_syncBatch),\n    _marked2 =\n/*#__PURE__*/\n_regenerator[\"default\"].mark(syncBuffer),\n    _marked3 =\n/*#__PURE__*/\n_regenerator[\"default\"].mark(_syncConcat),\n    _marked4 =\n/*#__PURE__*/\n_regenerator[\"default\"].mark(_syncTake),\n    _marked5 =\n/*#__PURE__*/\n_regenerator[\"default\"].mark(_syncTime);\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\nfunction __values(o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n}\n\nfunction __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []),\n      i,\n      q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n) {\n    if (g[n]) i[n] = function (v) {\n      return new Promise(function (a, b) {\n        q.push([n, v, a, b]) > 1 || resume(n, v);\n      });\n    };\n  }\n\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n\n  function step(r) {\n    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n}\n\nfunction __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) {\n    throw e;\n  }), verb(\"return\"), i[Symbol.iterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n, f) {\n    i[n] = o[n] ? function (v) {\n      return (p = !p) ? {\n        value: __await(o[n](v)),\n        done: n === \"return\"\n      } : f ? f(v) : v;\n    } : f;\n  }\n}\n\nfunction __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n      i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n}\n\nfunction _batch(size, iterable) {\n  return __asyncGenerator(this, arguments,\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _batch_1() {\n    var e_1, _a, dataBatch, iterable_1, iterable_1_1, data;\n\n    return _regenerator[\"default\"].wrap(function _batch_1$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dataBatch = [];\n            _context.prev = 1;\n            iterable_1 = __asyncValues(iterable);\n\n          case 3:\n            _context.next = 5;\n            return __await(iterable_1.next());\n\n          case 5:\n            iterable_1_1 = _context.sent;\n\n            if (iterable_1_1.done) {\n              _context.next = 17;\n              break;\n            }\n\n            data = iterable_1_1.value;\n            dataBatch.push(data);\n\n            if (!(dataBatch.length === size)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 12;\n            return __await(dataBatch);\n\n          case 12:\n            _context.next = 14;\n            return _context.sent;\n\n          case 14:\n            dataBatch = [];\n\n          case 15:\n            _context.next = 3;\n            break;\n\n          case 17:\n            _context.next = 22;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](1);\n            e_1 = {\n              error: _context.t0\n            };\n\n          case 22:\n            _context.prev = 22;\n            _context.prev = 23;\n\n            if (!(iterable_1_1 && !iterable_1_1.done && (_a = iterable_1[\"return\"]))) {\n              _context.next = 27;\n              break;\n            }\n\n            _context.next = 27;\n            return __await(_a.call(iterable_1));\n\n          case 27:\n            _context.prev = 27;\n\n            if (!e_1) {\n              _context.next = 30;\n              break;\n            }\n\n            throw e_1.error;\n\n          case 30:\n            return _context.finish(27);\n\n          case 31:\n            return _context.finish(22);\n\n          case 32:\n            if (!(dataBatch.length > 0)) {\n              _context.next = 37;\n              break;\n            }\n\n            _context.next = 35;\n            return __await(dataBatch);\n\n          case 35:\n            _context.next = 37;\n            return _context.sent;\n\n          case 37:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _batch_1, null, [[1, 19, 22, 32], [23,, 27, 31]]);\n  }));\n}\n\nfunction _syncBatch(size, iterable) {\n  var dataBatch, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, data;\n\n  return _regenerator[\"default\"].wrap(function _syncBatch$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          dataBatch = [];\n          _iteratorNormalCompletion = true;\n          _didIteratorError = false;\n          _iteratorError = undefined;\n          _context2.prev = 4;\n          _iterator = iterable[Symbol.iterator]();\n\n        case 6:\n          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n            _context2.next = 16;\n            break;\n          }\n\n          data = _step.value;\n          dataBatch.push(data);\n\n          if (!(dataBatch.length === size)) {\n            _context2.next = 13;\n            break;\n          }\n\n          _context2.next = 12;\n          return dataBatch;\n\n        case 12:\n          dataBatch = [];\n\n        case 13:\n          _iteratorNormalCompletion = true;\n          _context2.next = 6;\n          break;\n\n        case 16:\n          _context2.next = 22;\n          break;\n\n        case 18:\n          _context2.prev = 18;\n          _context2.t0 = _context2[\"catch\"](4);\n          _didIteratorError = true;\n          _iteratorError = _context2.t0;\n\n        case 22:\n          _context2.prev = 22;\n          _context2.prev = 23;\n\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n\n        case 25:\n          _context2.prev = 25;\n\n          if (!_didIteratorError) {\n            _context2.next = 28;\n            break;\n          }\n\n          throw _iteratorError;\n\n        case 28:\n          return _context2.finish(25);\n\n        case 29:\n          return _context2.finish(22);\n\n        case 30:\n          if (!(dataBatch.length > 0)) {\n            _context2.next = 33;\n            break;\n          }\n\n          _context2.next = 33;\n          return dataBatch;\n\n        case 33:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[4, 18, 22, 30], [23,, 25, 29]]);\n}\n\nfunction batch(size, iterable) {\n  if (iterable === undefined) {\n    return function (curriedIterable) {\n      return batch(size, curriedIterable);\n    };\n  }\n\n  if (iterable[Symbol.asyncIterator]) {\n    return _batch(size, iterable);\n  }\n\n  return _syncBatch(size, iterable);\n}\n\nfunction getIterator(iterable) {\n  if (typeof iterable.next === 'function') {\n    return iterable;\n  }\n\n  if (typeof iterable[Symbol.iterator] === 'function') {\n    return iterable[Symbol.iterator]();\n  }\n\n  if (typeof iterable[Symbol.asyncIterator] === 'function') {\n    return iterable[Symbol.asyncIterator]();\n  }\n\n  throw new TypeError('\"values\" does not to conform to any of the iterator or iterable protocols');\n}\n\nfunction defer() {\n  var reject;\n  var resolve;\n  var promise = new Promise(function (resolveFunc, rejectFunc) {\n    resolve = resolveFunc;\n    reject = rejectFunc;\n  });\n  return {\n    promise: promise,\n    reject: reject,\n    resolve: resolve\n  };\n} /// <reference lib=\"esnext.asynciterable\" />\n\n\nfunction _buffer(size, iterable) {\n  var iterator = getIterator(iterable);\n  var resultQueue = [];\n  var readQueue = [];\n  var reading = false;\n  var ended = false;\n\n  function fulfillReadQueue() {\n    while (readQueue.length > 0 && resultQueue.length > 0) {\n      var readDeferred = readQueue.shift();\n\n      var _resultQueue$shift = resultQueue.shift(),\n          error = _resultQueue$shift.error,\n          value = _resultQueue$shift.value;\n\n      if (error) {\n        readDeferred.reject(error);\n      } else {\n        readDeferred.resolve({\n          done: false,\n          value: value\n        });\n      }\n    }\n\n    while (readQueue.length > 0 && ended) {\n      var _readQueue$shift = readQueue.shift(),\n          resolve = _readQueue$shift.resolve;\n\n      resolve({\n        done: true,\n        value: undefined\n      });\n    }\n  }\n\n  function fillQueue() {\n    return _fillQueue.apply(this, arguments);\n  }\n\n  function _fillQueue() {\n    _fillQueue = _asyncToGenerator(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee() {\n      var _ref, done, value;\n\n      return _regenerator[\"default\"].wrap(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!ended) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 2:\n              if (!reading) {\n                _context3.next = 4;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 4:\n              if (!(resultQueue.length >= size)) {\n                _context3.next = 6;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 6:\n              reading = true;\n              _context3.prev = 7;\n              _context3.next = 10;\n              return iterator.next();\n\n            case 10:\n              _ref = _context3.sent;\n              done = _ref.done;\n              value = _ref.value;\n\n              if (done) {\n                ended = true;\n              } else {\n                resultQueue.push({\n                  value: value\n                });\n              }\n\n              _context3.next = 20;\n              break;\n\n            case 16:\n              _context3.prev = 16;\n              _context3.t0 = _context3[\"catch\"](7);\n              ended = true;\n              resultQueue.push({\n                error: _context3.t0\n              });\n\n            case 20:\n              fulfillReadQueue();\n              reading = false;\n              fillQueue();\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee, null, [[7, 16]]);\n    }));\n    return _fillQueue.apply(this, arguments);\n  }\n\n  function next() {\n    return _next2.apply(this, arguments);\n  }\n\n  function _next2() {\n    _next2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee2() {\n      var _resultQueue$shift2, error, value, deferred;\n\n      return _regenerator[\"default\"].wrap(function _callee2$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(resultQueue.length > 0)) {\n                _context4.next = 6;\n                break;\n              }\n\n              _resultQueue$shift2 = resultQueue.shift(), error = _resultQueue$shift2.error, value = _resultQueue$shift2.value;\n\n              if (!error) {\n                _context4.next = 4;\n                break;\n              }\n\n              throw error;\n\n            case 4:\n              fillQueue();\n              return _context4.abrupt(\"return\", {\n                done: false,\n                value: value\n              });\n\n            case 6:\n              if (!ended) {\n                _context4.next = 8;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", {\n                done: true,\n                value: undefined\n              });\n\n            case 8:\n              deferred = defer();\n              readQueue.push(deferred);\n              fillQueue();\n              return _context4.abrupt(\"return\", deferred.promise);\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _next2.apply(this, arguments);\n  }\n\n  var asyncIterableIterator = _defineProperty({\n    next: next\n  }, Symbol.asyncIterator, function () {\n    return asyncIterableIterator;\n  });\n\n  return asyncIterableIterator;\n}\n\nfunction syncBuffer(size, iterable) {\n  var valueQueue, e, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, value, _i, _valueQueue, _value;\n\n  return _regenerator[\"default\"].wrap(function syncBuffer$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          valueQueue = [];\n          _context5.prev = 1;\n          _iteratorNormalCompletion2 = true;\n          _didIteratorError2 = false;\n          _iteratorError2 = undefined;\n          _context5.prev = 5;\n          _iterator2 = iterable[Symbol.iterator]();\n\n        case 7:\n          if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n            _context5.next = 17;\n            break;\n          }\n\n          value = _step2.value;\n          valueQueue.push(value);\n\n          if (!(valueQueue.length <= size)) {\n            _context5.next = 12;\n            break;\n          }\n\n          return _context5.abrupt(\"continue\", 14);\n\n        case 12:\n          _context5.next = 14;\n          return valueQueue.shift();\n\n        case 14:\n          _iteratorNormalCompletion2 = true;\n          _context5.next = 7;\n          break;\n\n        case 17:\n          _context5.next = 23;\n          break;\n\n        case 19:\n          _context5.prev = 19;\n          _context5.t0 = _context5[\"catch\"](5);\n          _didIteratorError2 = true;\n          _iteratorError2 = _context5.t0;\n\n        case 23:\n          _context5.prev = 23;\n          _context5.prev = 24;\n\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n\n        case 26:\n          _context5.prev = 26;\n\n          if (!_didIteratorError2) {\n            _context5.next = 29;\n            break;\n          }\n\n          throw _iteratorError2;\n\n        case 29:\n          return _context5.finish(26);\n\n        case 30:\n          return _context5.finish(23);\n\n        case 31:\n          _context5.next = 36;\n          break;\n\n        case 33:\n          _context5.prev = 33;\n          _context5.t1 = _context5[\"catch\"](1);\n          e = _context5.t1;\n\n        case 36:\n          _i = 0, _valueQueue = valueQueue;\n\n        case 37:\n          if (!(_i < _valueQueue.length)) {\n            _context5.next = 44;\n            break;\n          }\n\n          _value = _valueQueue[_i];\n          _context5.next = 41;\n          return _value;\n\n        case 41:\n          _i++;\n          _context5.next = 37;\n          break;\n\n        case 44:\n          if (!e) {\n            _context5.next = 46;\n            break;\n          }\n\n          throw e;\n\n        case 46:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked2, null, [[1, 33], [5, 19, 23, 31], [24,, 26, 30]]);\n}\n\nfunction buffer(size, iterable) {\n  if (iterable === undefined) {\n    return function (curriedIterable) {\n      return buffer(size, curriedIterable);\n    };\n  }\n\n  if (iterable[Symbol.asyncIterator]) {\n    return _buffer(size, iterable);\n  }\n\n  return syncBuffer(size, iterable);\n}\n\nfunction _collect(_x) {\n  return _collect2.apply(this, arguments);\n}\n\nfunction _collect2() {\n  _collect2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee11(iterable) {\n    var e_1, _a, values, iterable_1, iterable_1_1, _value13;\n\n    return _regenerator[\"default\"].wrap(function _callee11$(_context28) {\n      while (1) {\n        switch (_context28.prev = _context28.next) {\n          case 0:\n            values = [];\n            _context28.prev = 1;\n            iterable_1 = __asyncValues(iterable);\n\n          case 3:\n            _context28.next = 5;\n            return iterable_1.next();\n\n          case 5:\n            iterable_1_1 = _context28.sent;\n\n            if (iterable_1_1.done) {\n              _context28.next = 11;\n              break;\n            }\n\n            _value13 = iterable_1_1.value;\n            values.push(_value13);\n\n          case 9:\n            _context28.next = 3;\n            break;\n\n          case 11:\n            _context28.next = 16;\n            break;\n\n          case 13:\n            _context28.prev = 13;\n            _context28.t0 = _context28[\"catch\"](1);\n            e_1 = {\n              error: _context28.t0\n            };\n\n          case 16:\n            _context28.prev = 16;\n            _context28.prev = 17;\n\n            if (!(iterable_1_1 && !iterable_1_1.done && (_a = iterable_1[\"return\"]))) {\n              _context28.next = 21;\n              break;\n            }\n\n            _context28.next = 21;\n            return _a.call(iterable_1);\n\n          case 21:\n            _context28.prev = 21;\n\n            if (!e_1) {\n              _context28.next = 24;\n              break;\n            }\n\n            throw e_1.error;\n\n          case 24:\n            return _context28.finish(21);\n\n          case 25:\n            return _context28.finish(16);\n\n          case 26:\n            return _context28.abrupt(\"return\", values);\n\n          case 27:\n          case \"end\":\n            return _context28.stop();\n        }\n      }\n    }, _callee11, null, [[1, 13, 16, 26], [17,, 21, 25]]);\n  }));\n  return _collect2.apply(this, arguments);\n}\n\nfunction collect(iterable) {\n  if (iterable[Symbol.asyncIterator]) {\n    return _collect(iterable);\n  }\n\n  return Array.from(iterable);\n}\n\nfunction _concat(iterables) {\n  return __asyncGenerator(this, arguments,\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _concat_1() {\n    var e_1, _a, iterables_1, iterables_1_1, iterable;\n\n    return _regenerator[\"default\"].wrap(function _concat_1$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            iterables_1 = __asyncValues(iterables);\n\n          case 2:\n            _context6.next = 4;\n            return __await(iterables_1.next());\n\n          case 4:\n            iterables_1_1 = _context6.sent;\n\n            if (iterables_1_1.done) {\n              _context6.next = 14;\n              break;\n            }\n\n            iterable = iterables_1_1.value;\n            _context6.t0 = __await;\n            return _context6.delegateYield(__asyncDelegator(__asyncValues(iterable)), \"t1\", 9);\n\n          case 9:\n            _context6.t2 = _context6.t1;\n            _context6.next = 12;\n            return (0, _context6.t0)(_context6.t2);\n\n          case 12:\n            _context6.next = 2;\n            break;\n\n          case 14:\n            _context6.next = 19;\n            break;\n\n          case 16:\n            _context6.prev = 16;\n            _context6.t3 = _context6[\"catch\"](0);\n            e_1 = {\n              error: _context6.t3\n            };\n\n          case 19:\n            _context6.prev = 19;\n            _context6.prev = 20;\n\n            if (!(iterables_1_1 && !iterables_1_1.done && (_a = iterables_1[\"return\"]))) {\n              _context6.next = 24;\n              break;\n            }\n\n            _context6.next = 24;\n            return __await(_a.call(iterables_1));\n\n          case 24:\n            _context6.prev = 24;\n\n            if (!e_1) {\n              _context6.next = 27;\n              break;\n            }\n\n            throw e_1.error;\n\n          case 27:\n            return _context6.finish(24);\n\n          case 28:\n            return _context6.finish(19);\n\n          case 29:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _concat_1, null, [[0, 16, 19, 29], [20,, 24, 28]]);\n  }));\n}\n\nfunction _syncConcat(iterables) {\n  var _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, iterable;\n\n  return _regenerator[\"default\"].wrap(function _syncConcat$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _iteratorNormalCompletion3 = true;\n          _didIteratorError3 = false;\n          _iteratorError3 = undefined;\n          _context7.prev = 3;\n          _iterator3 = iterables[Symbol.iterator]();\n\n        case 5:\n          if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n            _context7.next = 11;\n            break;\n          }\n\n          iterable = _step3.value;\n          return _context7.delegateYield(iterable, \"t0\", 8);\n\n        case 8:\n          _iteratorNormalCompletion3 = true;\n          _context7.next = 5;\n          break;\n\n        case 11:\n          _context7.next = 17;\n          break;\n\n        case 13:\n          _context7.prev = 13;\n          _context7.t1 = _context7[\"catch\"](3);\n          _didIteratorError3 = true;\n          _iteratorError3 = _context7.t1;\n\n        case 17:\n          _context7.prev = 17;\n          _context7.prev = 18;\n\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n\n        case 20:\n          _context7.prev = 20;\n\n          if (!_didIteratorError3) {\n            _context7.next = 23;\n            break;\n          }\n\n          throw _iteratorError3;\n\n        case 23:\n          return _context7.finish(20);\n\n        case 24:\n          return _context7.finish(17);\n\n        case 25:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked3, null, [[3, 13, 17, 25], [18,, 20, 24]]);\n}\n\nfunction concat() {\n  for (var _len = arguments.length, iterables = new Array(_len), _key = 0; _key < _len; _key++) {\n    iterables[_key] = arguments[_key];\n  }\n\n  var hasAnyAsync = iterables.find(function (itr) {\n    return itr[Symbol.asyncIterator] !== undefined;\n  });\n\n  if (hasAnyAsync) {\n    return _concat(iterables);\n  } else {\n    return _syncConcat(iterables);\n  }\n}\n\nfunction _consume(_x2) {\n  return _consume2.apply(this, arguments);\n}\n\nfunction _consume2() {\n  _consume2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee12(iterable) {\n    var e_1, _a, iterable_1, iterable_1_1, _val2;\n\n    return _regenerator[\"default\"].wrap(function _callee12$(_context29) {\n      while (1) {\n        switch (_context29.prev = _context29.next) {\n          case 0:\n            _context29.prev = 0;\n            iterable_1 = __asyncValues(iterable);\n\n          case 2:\n            _context29.next = 4;\n            return iterable_1.next();\n\n          case 4:\n            iterable_1_1 = _context29.sent;\n\n            if (iterable_1_1.done) {\n              _context29.next = 9;\n              break;\n            }\n\n            _val2 = iterable_1_1.value;\n\n          case 7:\n            _context29.next = 2;\n            break;\n\n          case 9:\n            _context29.next = 14;\n            break;\n\n          case 11:\n            _context29.prev = 11;\n            _context29.t0 = _context29[\"catch\"](0);\n            e_1 = {\n              error: _context29.t0\n            };\n\n          case 14:\n            _context29.prev = 14;\n            _context29.prev = 15;\n\n            if (!(iterable_1_1 && !iterable_1_1.done && (_a = iterable_1[\"return\"]))) {\n              _context29.next = 19;\n              break;\n            }\n\n            _context29.next = 19;\n            return _a.call(iterable_1);\n\n          case 19:\n            _context29.prev = 19;\n\n            if (!e_1) {\n              _context29.next = 22;\n              break;\n            }\n\n            throw e_1.error;\n\n          case 22:\n            return _context29.finish(19);\n\n          case 23:\n            return _context29.finish(14);\n\n          case 24:\n          case \"end\":\n            return _context29.stop();\n        }\n      }\n    }, _callee12, null, [[0, 11, 14, 24], [15,, 19, 23]]);\n  }));\n  return _consume2.apply(this, arguments);\n}\n\nfunction consume(iterable) {\n  if (iterable[Symbol.asyncIterator]) {\n    return _consume(iterable);\n  }\n}\n\nfunction _filter(filterFunc, iterable) {\n  return __asyncGenerator(this, arguments,\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _filter_1() {\n    var e_1, _a, iterable_1, iterable_1_1, _data;\n\n    return _regenerator[\"default\"].wrap(function _filter_1$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            iterable_1 = __asyncValues(iterable);\n\n          case 2:\n            _context8.next = 4;\n            return __await(iterable_1.next());\n\n          case 4:\n            iterable_1_1 = _context8.sent;\n\n            if (iterable_1_1.done) {\n              _context8.next = 16;\n              break;\n            }\n\n            _data = iterable_1_1.value;\n            _context8.next = 9;\n            return __await(filterFunc(_data));\n\n          case 9:\n            if (!_context8.sent) {\n              _context8.next = 14;\n              break;\n            }\n\n            _context8.next = 12;\n            return __await(_data);\n\n          case 12:\n            _context8.next = 14;\n            return _context8.sent;\n\n          case 14:\n            _context8.next = 2;\n            break;\n\n          case 16:\n            _context8.next = 21;\n            break;\n\n          case 18:\n            _context8.prev = 18;\n            _context8.t0 = _context8[\"catch\"](0);\n            e_1 = {\n              error: _context8.t0\n            };\n\n          case 21:\n            _context8.prev = 21;\n            _context8.prev = 22;\n\n            if (!(iterable_1_1 && !iterable_1_1.done && (_a = iterable_1[\"return\"]))) {\n              _context8.next = 26;\n              break;\n            }\n\n            _context8.next = 26;\n            return __await(_a.call(iterable_1));\n\n          case 26:\n            _context8.prev = 26;\n\n            if (!e_1) {\n              _context8.next = 29;\n              break;\n            }\n\n            throw e_1.error;\n\n          case 29:\n            return _context8.finish(26);\n\n          case 30:\n            return _context8.finish(21);\n\n          case 31:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _filter_1, null, [[0, 18, 21, 31], [22,, 26, 30]]);\n  }));\n}\n\nfunction filter(filterFunc, iterable) {\n  if (iterable === undefined) {\n    return function (curriedIterable) {\n      return _filter(filterFunc, curriedIterable);\n    };\n  }\n\n  return _filter(filterFunc, iterable);\n}\n\nfunction flatten(iterable) {\n  return __asyncGenerator(this, arguments,\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function flatten_1() {\n    var e_1, _a, iterable_1, iterable_1_1, maybeItr;\n\n    return _regenerator[\"default\"].wrap(function flatten_1$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            iterable_1 = __asyncValues(iterable);\n\n          case 2:\n            _context9.next = 4;\n            return __await(iterable_1.next());\n\n          case 4:\n            iterable_1_1 = _context9.sent;\n\n            if (iterable_1_1.done) {\n              _context9.next = 21;\n              break;\n            }\n\n            maybeItr = iterable_1_1.value;\n\n            if (!(maybeItr && typeof maybeItr !== 'string' && (maybeItr[Symbol.iterator] || maybeItr[Symbol.asyncIterator]))) {\n              _context9.next = 15;\n              break;\n            }\n\n            _context9.t0 = __await;\n            return _context9.delegateYield(__asyncDelegator(__asyncValues(flatten(maybeItr))), \"t1\", 10);\n\n          case 10:\n            _context9.t2 = _context9.t1;\n            _context9.next = 13;\n            return (0, _context9.t0)(_context9.t2);\n\n          case 13:\n            _context9.next = 19;\n            break;\n\n          case 15:\n            _context9.next = 17;\n            return __await(maybeItr);\n\n          case 17:\n            _context9.next = 19;\n            return _context9.sent;\n\n          case 19:\n            _context9.next = 2;\n            break;\n\n          case 21:\n            _context9.next = 26;\n            break;\n\n          case 23:\n            _context9.prev = 23;\n            _context9.t3 = _context9[\"catch\"](0);\n            e_1 = {\n              error: _context9.t3\n            };\n\n          case 26:\n            _context9.prev = 26;\n            _context9.prev = 27;\n\n            if (!(iterable_1_1 && !iterable_1_1.done && (_a = iterable_1[\"return\"]))) {\n              _context9.next = 31;\n              break;\n            }\n\n            _context9.next = 31;\n            return __await(_a.call(iterable_1));\n\n          case 31:\n            _context9.prev = 31;\n\n            if (!e_1) {\n              _context9.next = 34;\n              break;\n            }\n\n            throw e_1.error;\n\n          case 34:\n            return _context9.finish(31);\n\n          case 35:\n            return _context9.finish(26);\n\n          case 36:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, flatten_1, null, [[0, 23, 26, 36], [27,, 31, 35]]);\n  }));\n}\n\nfunction _map(func, iterable) {\n  return __asyncGenerator(this, arguments,\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _map_1() {\n    var e_1, _a, iterable_1, iterable_1_1, val;\n\n    return _regenerator[\"default\"].wrap(function _map_1$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            iterable_1 = __asyncValues(iterable);\n\n          case 2:\n            _context10.next = 4;\n            return __await(iterable_1.next());\n\n          case 4:\n            iterable_1_1 = _context10.sent;\n\n            if (iterable_1_1.done) {\n              _context10.next = 17;\n              break;\n            }\n\n            val = iterable_1_1.value;\n            _context10.t0 = __await;\n            _context10.next = 10;\n            return __await(func(val));\n\n          case 10:\n            _context10.t1 = _context10.sent;\n            _context10.next = 13;\n            return (0, _context10.t0)(_context10.t1);\n\n          case 13:\n            _context10.next = 15;\n            return _context10.sent;\n\n          case 15:\n            _context10.next = 2;\n            break;\n\n          case 17:\n            _context10.next = 22;\n            break;\n\n          case 19:\n            _context10.prev = 19;\n            _context10.t2 = _context10[\"catch\"](0);\n            e_1 = {\n              error: _context10.t2\n            };\n\n          case 22:\n            _context10.prev = 22;\n            _context10.prev = 23;\n\n            if (!(iterable_1_1 && !iterable_1_1.done && (_a = iterable_1[\"return\"]))) {\n              _context10.next = 27;\n              break;\n            }\n\n            _context10.next = 27;\n            return __await(_a.call(iterable_1));\n\n          case 27:\n            _context10.prev = 27;\n\n            if (!e_1) {\n              _context10.next = 30;\n              break;\n            }\n\n            throw e_1.error;\n\n          case 30:\n            return _context10.finish(27);\n\n          case 31:\n            return _context10.finish(22);\n\n          case 32:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _map_1, null, [[0, 19, 22, 32], [23,, 27, 31]]);\n  }));\n}\n\nfunction map(func, iterable) {\n  if (iterable === undefined) {\n    return function (curriedIterable) {\n      return _map(func, curriedIterable);\n    };\n  }\n\n  return _map(func, iterable);\n}\n\nfunction flatMap(func, iterable) {\n  if (iterable === undefined) {\n    return function (curriedIterable) {\n      return flatMap(func, curriedIterable);\n    };\n  }\n\n  return filter(function (i) {\n    return i !== undefined && i !== null;\n  }, flatten(map(func, iterable)));\n}\n\nfunction _flatTransform(concurrency, func, iterable) {\n  var iterator = getIterator(iterable);\n  var resultQueue = [];\n  var readQueue = [];\n  var ended = false;\n  var reading = false;\n  var inflightCount = 0;\n  var lastError = null;\n\n  function fulfillReadQueue() {\n    while (readQueue.length > 0 && resultQueue.length > 0) {\n      var _readQueue$shift2 = readQueue.shift(),\n          resolve = _readQueue$shift2.resolve;\n\n      var _value2 = resultQueue.shift();\n\n      resolve({\n        done: false,\n        value: _value2\n      });\n    }\n\n    while (readQueue.length > 0 && inflightCount === 0 && ended) {\n      var _readQueue$shift3 = readQueue.shift(),\n          resolve = _readQueue$shift3.resolve,\n          reject = _readQueue$shift3.reject;\n\n      if (lastError) {\n        reject(lastError);\n        lastError = null;\n      } else {\n        resolve({\n          done: true,\n          value: undefined\n        });\n      }\n    }\n  }\n\n  function fillQueue() {\n    return _fillQueue2.apply(this, arguments);\n  }\n\n  function _fillQueue2() {\n    _fillQueue2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee3() {\n      var _ref2, done, _value3;\n\n      return _regenerator[\"default\"].wrap(function _callee3$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              if (!ended) {\n                _context11.next = 3;\n                break;\n              }\n\n              fulfillReadQueue();\n              return _context11.abrupt(\"return\");\n\n            case 3:\n              if (!reading) {\n                _context11.next = 5;\n                break;\n              }\n\n              return _context11.abrupt(\"return\");\n\n            case 5:\n              if (!(inflightCount + resultQueue.length >= concurrency)) {\n                _context11.next = 7;\n                break;\n              }\n\n              return _context11.abrupt(\"return\");\n\n            case 7:\n              reading = true;\n              inflightCount++;\n              _context11.prev = 9;\n              _context11.next = 12;\n              return iterator.next();\n\n            case 12:\n              _ref2 = _context11.sent;\n              done = _ref2.done;\n              _value3 = _ref2.value;\n\n              if (done) {\n                ended = true;\n                inflightCount--;\n                fulfillReadQueue();\n              } else {\n                mapAndQueue(_value3);\n              }\n\n              _context11.next = 24;\n              break;\n\n            case 18:\n              _context11.prev = 18;\n              _context11.t0 = _context11[\"catch\"](9);\n              ended = true;\n              inflightCount--;\n              lastError = _context11.t0;\n              fulfillReadQueue();\n\n            case 24:\n              reading = false;\n              fillQueue();\n\n            case 26:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee3, null, [[9, 18]]);\n    }));\n    return _fillQueue2.apply(this, arguments);\n  }\n\n  function mapAndQueue(_x3) {\n    return _mapAndQueue.apply(this, arguments);\n  }\n\n  function _mapAndQueue() {\n    _mapAndQueue = _asyncToGenerator(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee4(itrValue) {\n      var e_1, _a, _value4, _b, _c, asyncVal;\n\n      return _regenerator[\"default\"].wrap(function _callee4$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              _context12.next = 3;\n              return func(itrValue);\n\n            case 3:\n              _value4 = _context12.sent;\n\n              if (!(_value4 && _value4[Symbol.asyncIterator])) {\n                _context12.next = 32;\n                break;\n              }\n\n              _context12.prev = 5;\n              _b = __asyncValues(_value4);\n\n            case 7:\n              _context12.next = 9;\n              return _b.next();\n\n            case 9:\n              _c = _context12.sent;\n\n              if (_c.done) {\n                _context12.next = 15;\n                break;\n              }\n\n              asyncVal = _c.value;\n              resultQueue.push(asyncVal);\n\n            case 13:\n              _context12.next = 7;\n              break;\n\n            case 15:\n              _context12.next = 20;\n              break;\n\n            case 17:\n              _context12.prev = 17;\n              _context12.t0 = _context12[\"catch\"](5);\n              e_1 = {\n                error: _context12.t0\n              };\n\n            case 20:\n              _context12.prev = 20;\n              _context12.prev = 21;\n\n              if (!(_c && !_c.done && (_a = _b[\"return\"]))) {\n                _context12.next = 25;\n                break;\n              }\n\n              _context12.next = 25;\n              return _a.call(_b);\n\n            case 25:\n              _context12.prev = 25;\n\n              if (!e_1) {\n                _context12.next = 28;\n                break;\n              }\n\n              throw e_1.error;\n\n            case 28:\n              return _context12.finish(25);\n\n            case 29:\n              return _context12.finish(20);\n\n            case 30:\n              _context12.next = 33;\n              break;\n\n            case 32:\n              resultQueue.push(_value4);\n\n            case 33:\n              _context12.next = 39;\n              break;\n\n            case 35:\n              _context12.prev = 35;\n              _context12.t1 = _context12[\"catch\"](0);\n              ended = true;\n              lastError = _context12.t1;\n\n            case 39:\n              inflightCount--;\n              fulfillReadQueue();\n              fillQueue();\n\n            case 42:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee4, null, [[0, 35], [5, 17, 20, 30], [21,, 25, 29]]);\n    }));\n    return _mapAndQueue.apply(this, arguments);\n  }\n\n  function next() {\n    return _next3.apply(this, arguments);\n  }\n\n  function _next3() {\n    _next3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee5() {\n      var deferred, value;\n      return _regenerator[\"default\"].wrap(function _callee5$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              if (!(resultQueue.length === 0)) {\n                _context13.next = 5;\n                break;\n              }\n\n              deferred = defer();\n              readQueue.push(deferred);\n              fillQueue();\n              return _context13.abrupt(\"return\", deferred.promise);\n\n            case 5:\n              value = resultQueue.shift();\n              fillQueue();\n              return _context13.abrupt(\"return\", {\n                done: false,\n                value: value\n              });\n\n            case 8:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return _next3.apply(this, arguments);\n  }\n\n  var asyncIterableIterator = _defineProperty({\n    next: next\n  }, Symbol.asyncIterator, function () {\n    return asyncIterableIterator;\n  });\n\n  return asyncIterableIterator;\n}\n\nfunction flatTransform(concurrency, func, iterable) {\n  if (func === undefined) {\n    return function (curriedFunc, curriedIterable) {\n      return curriedIterable ? flatTransform(concurrency, curriedFunc, curriedIterable) : flatTransform(concurrency, curriedFunc);\n    };\n  }\n\n  if (iterable === undefined) {\n    return function (curriedIterable) {\n      return flatTransform(concurrency, func, curriedIterable);\n    };\n  }\n\n  return filter(function (i) {\n    return i !== undefined && i !== null;\n  }, flatten(_flatTransform(concurrency, func, iterable)));\n}\n\nfunction onceReadable(_x4) {\n  return _onceReadable.apply(this, arguments);\n}\n\nfunction _onceReadable() {\n  _onceReadable = _asyncToGenerator(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee13(stream) {\n    return _regenerator[\"default\"].wrap(function _callee13$(_context30) {\n      while (1) {\n        switch (_context30.prev = _context30.next) {\n          case 0:\n            return _context30.abrupt(\"return\", new Promise(function (resolve) {\n              stream.once('readable', function () {\n                resolve();\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context30.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _onceReadable.apply(this, arguments);\n}\n\nfunction _fromStream(stream) {\n  return __asyncGenerator(this, arguments,\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _fromStream_1() {\n    var _data2;\n\n    return _regenerator[\"default\"].wrap(function _fromStream_1$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            if (!true) {\n              _context14.next = 16;\n              break;\n            }\n\n            _data2 = stream.read();\n\n            if (!(_data2 !== null)) {\n              _context14.next = 8;\n              break;\n            }\n\n            _context14.next = 5;\n            return __await(_data2);\n\n          case 5:\n            _context14.next = 7;\n            return _context14.sent;\n\n          case 7:\n            return _context14.abrupt(\"continue\", 0);\n\n          case 8:\n            if (!stream._readableState.ended) {\n              _context14.next = 12;\n              break;\n            }\n\n            _context14.next = 11;\n            return __await(void 0);\n\n          case 11:\n            return _context14.abrupt(\"return\", _context14.sent);\n\n          case 12:\n            _context14.next = 14;\n            return __await(onceReadable(stream));\n\n          case 14:\n            _context14.next = 0;\n            break;\n\n          case 16:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _fromStream_1);\n  }));\n}\n\nfunction fromStream(stream) {\n  if (typeof stream[Symbol.asyncIterator] === 'function') {\n    return stream;\n  }\n\n  return _fromStream(stream);\n}\n\nfunction merge() {\n  for (var _len2 = arguments.length, iterables = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    iterables[_key2] = arguments[_key2];\n  }\n\n  return __asyncGenerator(this, arguments,\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function merge_1() {\n    var sources, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, iterator, nextVal;\n\n    return _regenerator[\"default\"].wrap(function merge_1$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            sources = new Set(iterables.map(getIterator));\n\n          case 1:\n            if (!(sources.size > 0)) {\n              _context15.next = 39;\n              break;\n            }\n\n            _iteratorNormalCompletion4 = true;\n            _didIteratorError4 = false;\n            _iteratorError4 = undefined;\n            _context15.prev = 5;\n            _iterator4 = sources[Symbol.iterator]();\n\n          case 7:\n            if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n              _context15.next = 23;\n              break;\n            }\n\n            iterator = _step4.value;\n            _context15.next = 11;\n            return __await(iterator.next());\n\n          case 11:\n            nextVal = _context15.sent;\n\n            if (!nextVal.done) {\n              _context15.next = 16;\n              break;\n            }\n\n            sources[\"delete\"](iterator);\n            _context15.next = 20;\n            break;\n\n          case 16:\n            _context15.next = 18;\n            return __await(nextVal.value);\n\n          case 18:\n            _context15.next = 20;\n            return _context15.sent;\n\n          case 20:\n            _iteratorNormalCompletion4 = true;\n            _context15.next = 7;\n            break;\n\n          case 23:\n            _context15.next = 29;\n            break;\n\n          case 25:\n            _context15.prev = 25;\n            _context15.t0 = _context15[\"catch\"](5);\n            _didIteratorError4 = true;\n            _iteratorError4 = _context15.t0;\n\n          case 29:\n            _context15.prev = 29;\n            _context15.prev = 30;\n\n            if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n              _iterator4[\"return\"]();\n            }\n\n          case 32:\n            _context15.prev = 32;\n\n            if (!_didIteratorError4) {\n              _context15.next = 35;\n              break;\n            }\n\n            throw _iteratorError4;\n\n          case 35:\n            return _context15.finish(32);\n\n          case 36:\n            return _context15.finish(29);\n\n          case 37:\n            _context15.next = 1;\n            break;\n\n          case 39:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, merge_1, null, [[5, 25, 29, 37], [30,, 32, 36]]);\n  }));\n}\n\nfunction pipeline(firstFn) {\n  var previousFn = firstFn();\n\n  for (var _len3 = arguments.length, fns = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    fns[_key3 - 1] = arguments[_key3];\n  }\n\n  for (var _i2 = 0, _fns = fns; _i2 < _fns.length; _i2++) {\n    var func = _fns[_i2];\n    previousFn = func(previousFn);\n  }\n\n  return previousFn;\n}\n\nfunction _parallelMap(concurrency, func, iterable) {\n  return __asyncGenerator(this, arguments,\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _parallelMap_1() {\n    var transformError, wrapFunc, stopOnError, output, itr, _ref3, _value6, done, val;\n\n    return _regenerator[\"default\"].wrap(function _parallelMap_1$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            transformError = null;\n\n            wrapFunc = function wrapFunc(value) {\n              return {\n                value: func(value)\n              };\n            };\n\n            stopOnError = function stopOnError(source) {\n              return __asyncGenerator(this, arguments,\n              /*#__PURE__*/\n              _regenerator[\"default\"].mark(function _callee6() {\n                var e_1, _a, source_1, source_1_1, _value5;\n\n                return _regenerator[\"default\"].wrap(function _callee6$(_context16) {\n                  while (1) {\n                    switch (_context16.prev = _context16.next) {\n                      case 0:\n                        _context16.prev = 0;\n                        source_1 = __asyncValues(source);\n\n                      case 2:\n                        _context16.next = 4;\n                        return __await(source_1.next());\n\n                      case 4:\n                        source_1_1 = _context16.sent;\n\n                        if (source_1_1.done) {\n                          _context16.next = 17;\n                          break;\n                        }\n\n                        _value5 = source_1_1.value;\n\n                        if (!transformError) {\n                          _context16.next = 11;\n                          break;\n                        }\n\n                        _context16.next = 10;\n                        return __await(void 0);\n\n                      case 10:\n                        return _context16.abrupt(\"return\", _context16.sent);\n\n                      case 11:\n                        _context16.next = 13;\n                        return __await(_value5);\n\n                      case 13:\n                        _context16.next = 15;\n                        return _context16.sent;\n\n                      case 15:\n                        _context16.next = 2;\n                        break;\n\n                      case 17:\n                        _context16.next = 22;\n                        break;\n\n                      case 19:\n                        _context16.prev = 19;\n                        _context16.t0 = _context16[\"catch\"](0);\n                        e_1 = {\n                          error: _context16.t0\n                        };\n\n                      case 22:\n                        _context16.prev = 22;\n                        _context16.prev = 23;\n\n                        if (!(source_1_1 && !source_1_1.done && (_a = source_1[\"return\"]))) {\n                          _context16.next = 27;\n                          break;\n                        }\n\n                        _context16.next = 27;\n                        return __await(_a.call(source_1));\n\n                      case 27:\n                        _context16.prev = 27;\n\n                        if (!e_1) {\n                          _context16.next = 30;\n                          break;\n                        }\n\n                        throw e_1.error;\n\n                      case 30:\n                        return _context16.finish(27);\n\n                      case 31:\n                        return _context16.finish(22);\n\n                      case 32:\n                      case \"end\":\n                        return _context16.stop();\n                    }\n                  }\n                }, _callee6, null, [[0, 19, 22, 32], [23,, 27, 31]]);\n              }));\n            };\n\n            output = pipeline(function () {\n              return iterable;\n            }, buffer(1), stopOnError, map(wrapFunc), buffer(concurrency));\n            itr = getIterator(output);\n\n          case 5:\n            if (!true) {\n              _context17.next = 29;\n              break;\n            }\n\n            _context17.next = 8;\n            return __await(itr.next());\n\n          case 8:\n            _ref3 = _context17.sent;\n            _value6 = _ref3.value;\n            done = _ref3.done;\n\n            if (!done) {\n              _context17.next = 13;\n              break;\n            }\n\n            return _context17.abrupt(\"break\", 29);\n\n          case 13:\n            _context17.prev = 13;\n            _context17.next = 16;\n            return __await(_value6.value);\n\n          case 16:\n            val = _context17.sent;\n\n            if (transformError) {\n              _context17.next = 22;\n              break;\n            }\n\n            _context17.next = 20;\n            return __await(val);\n\n          case 20:\n            _context17.next = 22;\n            return _context17.sent;\n\n          case 22:\n            _context17.next = 27;\n            break;\n\n          case 24:\n            _context17.prev = 24;\n            _context17.t0 = _context17[\"catch\"](13);\n            transformError = _context17.t0;\n\n          case 27:\n            _context17.next = 5;\n            break;\n\n          case 29:\n            if (!transformError) {\n              _context17.next = 31;\n              break;\n            }\n\n            throw transformError;\n\n          case 31:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _parallelMap_1, null, [[13, 24]]);\n  }));\n}\n\nfunction parallelMap(concurrency, func, iterable) {\n  if (func === undefined) {\n    return function (curriedFunc, curriedIterable) {\n      return parallelMap(concurrency, curriedFunc, curriedIterable);\n    };\n  }\n\n  if (iterable === undefined) {\n    return function (curriedIterable) {\n      return parallelMap(concurrency, func, curriedIterable);\n    };\n  }\n\n  return _parallelMap(concurrency, func, iterable);\n}\n\nfunction parallelFlatMap(concurrency, func, iterable) {\n  if (func === undefined) {\n    return function (curriedFunc, curriedIterable) {\n      return curriedIterable ? parallelFlatMap(concurrency, curriedFunc, curriedIterable) : parallelFlatMap(concurrency, curriedFunc);\n    };\n  }\n\n  if (iterable === undefined) {\n    return function (curriedIterable) {\n      return parallelFlatMap(concurrency, func, curriedIterable);\n    };\n  }\n\n  return filter(function (i) {\n    return i !== undefined && i !== null;\n  }, flatten(parallelMap(concurrency, func, iterable)));\n}\n\nfunction parallelMerge() {\n  for (var _len4 = arguments.length, iterables = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    iterables[_key4] = arguments[_key4];\n  }\n\n  return __asyncGenerator(this, arguments,\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function parallelMerge_1() {\n    var inputs, concurrentWork, values, queueNext, _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, input, _iteratorNormalCompletion6, _didIteratorError6, _iteratorError6, _iterator6, _step6, _step6$value, _value7;\n\n    return _regenerator[\"default\"].wrap(function parallelMerge_1$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            inputs = iterables.map(getIterator);\n            concurrentWork = new Set();\n            values = new Map();\n\n            queueNext = function queueNext(input) {\n              var nextVal = Promise.resolve(input.next()).then(\n              /*#__PURE__*/\n              function () {\n                var _ref5 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regenerator[\"default\"].mark(function _callee7(_ref4) {\n                  var done, value;\n                  return _regenerator[\"default\"].wrap(function _callee7$(_context18) {\n                    while (1) {\n                      switch (_context18.prev = _context18.next) {\n                        case 0:\n                          done = _ref4.done, value = _ref4.value;\n\n                          if (!done) {\n                            values.set(input, value);\n                          }\n\n                          concurrentWork[\"delete\"](nextVal);\n\n                        case 3:\n                        case \"end\":\n                          return _context18.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function (_x5) {\n                  return _ref5.apply(this, arguments);\n                };\n              }());\n              concurrentWork.add(nextVal);\n            };\n\n            _iteratorNormalCompletion5 = true;\n            _didIteratorError5 = false;\n            _iteratorError5 = undefined;\n            _context19.prev = 7;\n\n            for (_iterator5 = inputs[Symbol.iterator](); !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              input = _step5.value;\n              queueNext(input);\n            }\n\n            _context19.next = 15;\n            break;\n\n          case 11:\n            _context19.prev = 11;\n            _context19.t0 = _context19[\"catch\"](7);\n            _didIteratorError5 = true;\n            _iteratorError5 = _context19.t0;\n\n          case 15:\n            _context19.prev = 15;\n            _context19.prev = 16;\n\n            if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n              _iterator5[\"return\"]();\n            }\n\n          case 18:\n            _context19.prev = 18;\n\n            if (!_didIteratorError5) {\n              _context19.next = 21;\n              break;\n            }\n\n            throw _iteratorError5;\n\n          case 21:\n            return _context19.finish(18);\n\n          case 22:\n            return _context19.finish(15);\n\n          case 23:\n            if (!true) {\n              _context19.next = 62;\n              break;\n            }\n\n            if (!(concurrentWork.size === 0)) {\n              _context19.next = 28;\n              break;\n            }\n\n            _context19.next = 27;\n            return __await(void 0);\n\n          case 27:\n            return _context19.abrupt(\"return\", _context19.sent);\n\n          case 28:\n            _context19.next = 30;\n            return __await(Promise.race(concurrentWork));\n\n          case 30:\n            _iteratorNormalCompletion6 = true;\n            _didIteratorError6 = false;\n            _iteratorError6 = undefined;\n            _context19.prev = 33;\n            _iterator6 = values[Symbol.iterator]();\n\n          case 35:\n            if (_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done) {\n              _context19.next = 46;\n              break;\n            }\n\n            _step6$value = _slicedToArray(_step6.value, 2), input = _step6$value[0], _value7 = _step6$value[1];\n            values[\"delete\"](input);\n            _context19.next = 40;\n            return __await(_value7);\n\n          case 40:\n            _context19.next = 42;\n            return _context19.sent;\n\n          case 42:\n            queueNext(input);\n\n          case 43:\n            _iteratorNormalCompletion6 = true;\n            _context19.next = 35;\n            break;\n\n          case 46:\n            _context19.next = 52;\n            break;\n\n          case 48:\n            _context19.prev = 48;\n            _context19.t1 = _context19[\"catch\"](33);\n            _didIteratorError6 = true;\n            _iteratorError6 = _context19.t1;\n\n          case 52:\n            _context19.prev = 52;\n            _context19.prev = 53;\n\n            if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n              _iterator6[\"return\"]();\n            }\n\n          case 55:\n            _context19.prev = 55;\n\n            if (!_didIteratorError6) {\n              _context19.next = 58;\n              break;\n            }\n\n            throw _iteratorError6;\n\n          case 58:\n            return _context19.finish(55);\n\n          case 59:\n            return _context19.finish(52);\n\n          case 60:\n            _context19.next = 23;\n            break;\n\n          case 62:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, parallelMerge_1, null, [[7, 11, 15, 23], [16,, 18, 22], [33, 48, 52, 60], [53,, 55, 59]]);\n  }));\n}\n\nfunction _reduce(_x6, _x7, _x8) {\n  return _reduce2.apply(this, arguments);\n}\n\nfunction _reduce2() {\n  _reduce2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee14(func, start, iterable) {\n    var e_1, _a, value, iterable_1, iterable_1_1, nextItem;\n\n    return _regenerator[\"default\"].wrap(function _callee14$(_context31) {\n      while (1) {\n        switch (_context31.prev = _context31.next) {\n          case 0:\n            value = start;\n            _context31.prev = 1;\n            iterable_1 = __asyncValues(iterable);\n\n          case 3:\n            _context31.next = 5;\n            return iterable_1.next();\n\n          case 5:\n            iterable_1_1 = _context31.sent;\n\n            if (iterable_1_1.done) {\n              _context31.next = 13;\n              break;\n            }\n\n            nextItem = iterable_1_1.value;\n            _context31.next = 10;\n            return func(value, nextItem);\n\n          case 10:\n            value = _context31.sent;\n\n          case 11:\n            _context31.next = 3;\n            break;\n\n          case 13:\n            _context31.next = 18;\n            break;\n\n          case 15:\n            _context31.prev = 15;\n            _context31.t0 = _context31[\"catch\"](1);\n            e_1 = {\n              error: _context31.t0\n            };\n\n          case 18:\n            _context31.prev = 18;\n            _context31.prev = 19;\n\n            if (!(iterable_1_1 && !iterable_1_1.done && (_a = iterable_1[\"return\"]))) {\n              _context31.next = 23;\n              break;\n            }\n\n            _context31.next = 23;\n            return _a.call(iterable_1);\n\n          case 23:\n            _context31.prev = 23;\n\n            if (!e_1) {\n              _context31.next = 26;\n              break;\n            }\n\n            throw e_1.error;\n\n          case 26:\n            return _context31.finish(23);\n\n          case 27:\n            return _context31.finish(18);\n\n          case 28:\n            return _context31.abrupt(\"return\", value);\n\n          case 29:\n          case \"end\":\n            return _context31.stop();\n        }\n      }\n    }, _callee14, null, [[1, 15, 18, 28], [19,, 23, 27]]);\n  }));\n  return _reduce2.apply(this, arguments);\n}\n\nfunction reduce(func, start, iterable) {\n  if (start === undefined) {\n    return function (curriedStart, curriedIterable) {\n      return curriedIterable ? reduce(func, curriedStart, curriedIterable) : reduce(func, curriedStart);\n    };\n  }\n\n  if (iterable === undefined) {\n    return function (curriedIterable) {\n      return reduce(func, start, curriedIterable);\n    };\n  }\n\n  return _reduce(func, start, iterable);\n}\n\nfunction _take(count, iterable) {\n  return __asyncGenerator(this, arguments,\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _take_1() {\n    var e_1, _a, taken, iterable_1, iterable_1_1, val;\n\n    return _regenerator[\"default\"].wrap(function _take_1$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            taken = 0;\n            _context20.prev = 1;\n            iterable_1 = __asyncValues(iterable);\n\n          case 3:\n            _context20.next = 5;\n            return __await(iterable_1.next());\n\n          case 5:\n            iterable_1_1 = _context20.sent;\n\n            if (iterable_1_1.done) {\n              _context20.next = 23;\n              break;\n            }\n\n            val = iterable_1_1.value;\n            _context20.t0 = __await;\n            _context20.next = 11;\n            return __await(val);\n\n          case 11:\n            _context20.t1 = _context20.sent;\n            _context20.next = 14;\n            return (0, _context20.t0)(_context20.t1);\n\n          case 14:\n            _context20.next = 16;\n            return _context20.sent;\n\n          case 16:\n            taken++;\n\n            if (!(taken >= count)) {\n              _context20.next = 21;\n              break;\n            }\n\n            _context20.next = 20;\n            return __await(void 0);\n\n          case 20:\n            return _context20.abrupt(\"return\", _context20.sent);\n\n          case 21:\n            _context20.next = 3;\n            break;\n\n          case 23:\n            _context20.next = 28;\n            break;\n\n          case 25:\n            _context20.prev = 25;\n            _context20.t2 = _context20[\"catch\"](1);\n            e_1 = {\n              error: _context20.t2\n            };\n\n          case 28:\n            _context20.prev = 28;\n            _context20.prev = 29;\n\n            if (!(iterable_1_1 && !iterable_1_1.done && (_a = iterable_1[\"return\"]))) {\n              _context20.next = 33;\n              break;\n            }\n\n            _context20.next = 33;\n            return __await(_a.call(iterable_1));\n\n          case 33:\n            _context20.prev = 33;\n\n            if (!e_1) {\n              _context20.next = 36;\n              break;\n            }\n\n            throw e_1.error;\n\n          case 36:\n            return _context20.finish(33);\n\n          case 37:\n            return _context20.finish(28);\n\n          case 38:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _take_1, null, [[1, 25, 28, 38], [29,, 33, 37]]);\n  }));\n}\n\nfunction _syncTake(count, iterable) {\n  var taken, _iteratorNormalCompletion7, _didIteratorError7, _iteratorError7, _iterator7, _step7, val;\n\n  return _regenerator[\"default\"].wrap(function _syncTake$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          taken = 0;\n          _iteratorNormalCompletion7 = true;\n          _didIteratorError7 = false;\n          _iteratorError7 = undefined;\n          _context21.prev = 4;\n          _iterator7 = iterable[Symbol.iterator]();\n\n        case 6:\n          if (_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done) {\n            _context21.next = 16;\n            break;\n          }\n\n          val = _step7.value;\n          _context21.next = 10;\n          return val;\n\n        case 10:\n          taken++;\n\n          if (!(taken >= count)) {\n            _context21.next = 13;\n            break;\n          }\n\n          return _context21.abrupt(\"return\");\n\n        case 13:\n          _iteratorNormalCompletion7 = true;\n          _context21.next = 6;\n          break;\n\n        case 16:\n          _context21.next = 22;\n          break;\n\n        case 18:\n          _context21.prev = 18;\n          _context21.t0 = _context21[\"catch\"](4);\n          _didIteratorError7 = true;\n          _iteratorError7 = _context21.t0;\n\n        case 22:\n          _context21.prev = 22;\n          _context21.prev = 23;\n\n          if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n            _iterator7[\"return\"]();\n          }\n\n        case 25:\n          _context21.prev = 25;\n\n          if (!_didIteratorError7) {\n            _context21.next = 28;\n            break;\n          }\n\n          throw _iteratorError7;\n\n        case 28:\n          return _context21.finish(25);\n\n        case 29:\n          return _context21.finish(22);\n\n        case 30:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked4, null, [[4, 18, 22, 30], [23,, 25, 29]]);\n}\n\nfunction take(count, iterable) {\n  if (iterable === undefined) {\n    return function (curriedIterable) {\n      return take(count, curriedIterable);\n    };\n  }\n\n  if (iterable[Symbol.asyncIterator]) {\n    return _take(count, iterable);\n  }\n\n  return _syncTake(count, iterable);\n}\n\nfunction _asyncTap(func, iterable) {\n  return __asyncGenerator(this, arguments,\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _asyncTap_1() {\n    var e_1, _a, iterable_1, iterable_1_1, _val;\n\n    return _regenerator[\"default\"].wrap(function _asyncTap_1$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            _context22.prev = 0;\n            iterable_1 = __asyncValues(iterable);\n\n          case 2:\n            _context22.next = 4;\n            return __await(iterable_1.next());\n\n          case 4:\n            iterable_1_1 = _context22.sent;\n\n            if (iterable_1_1.done) {\n              _context22.next = 15;\n              break;\n            }\n\n            _val = iterable_1_1.value;\n            _context22.next = 9;\n            return __await(func(_val));\n\n          case 9:\n            _context22.next = 11;\n            return __await(_val);\n\n          case 11:\n            _context22.next = 13;\n            return _context22.sent;\n\n          case 13:\n            _context22.next = 2;\n            break;\n\n          case 15:\n            _context22.next = 20;\n            break;\n\n          case 17:\n            _context22.prev = 17;\n            _context22.t0 = _context22[\"catch\"](0);\n            e_1 = {\n              error: _context22.t0\n            };\n\n          case 20:\n            _context22.prev = 20;\n            _context22.prev = 21;\n\n            if (!(iterable_1_1 && !iterable_1_1.done && (_a = iterable_1[\"return\"]))) {\n              _context22.next = 25;\n              break;\n            }\n\n            _context22.next = 25;\n            return __await(_a.call(iterable_1));\n\n          case 25:\n            _context22.prev = 25;\n\n            if (!e_1) {\n              _context22.next = 28;\n              break;\n            }\n\n            throw e_1.error;\n\n          case 28:\n            return _context22.finish(25);\n\n          case 29:\n            return _context22.finish(20);\n\n          case 30:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, _asyncTap_1, null, [[0, 17, 20, 30], [21,, 25, 29]]);\n  }));\n}\n\nfunction tap(func, iterable) {\n  if (iterable === undefined) {\n    return function (curriedIterable) {\n      return _asyncTap(func, curriedIterable);\n    };\n  }\n\n  return _asyncTap(func, iterable);\n}\n\nfunction addTime(a, b) {\n  var seconds = a[0] + b[0];\n  var nanoseconds = a[1] + b[1];\n\n  if (nanoseconds >= 1000000000) {\n    var remainder = nanoseconds % 1000000000;\n    seconds += (nanoseconds - remainder) / 1000000000;\n    nanoseconds = remainder;\n  }\n\n  return [seconds, nanoseconds];\n}\n\nfunction _asyncTime(config, iterable) {\n  return __asyncGenerator(this, arguments,\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _asyncTime_1() {\n    var itr, total, start, _ref6, _value8, done, delta;\n\n    return _regenerator[\"default\"].wrap(function _asyncTime_1$(_context23) {\n      while (1) {\n        switch (_context23.prev = _context23.next) {\n          case 0:\n            itr = iterable[Symbol.asyncIterator]();\n            total = [0, 0];\n\n          case 2:\n            if (!true) {\n              _context23.next = 23;\n              break;\n            }\n\n            start = process.hrtime();\n            _context23.next = 6;\n            return __await(itr.next());\n\n          case 6:\n            _ref6 = _context23.sent;\n            _value8 = _ref6.value;\n            done = _ref6.done;\n            delta = process.hrtime(start);\n            total = addTime(total, delta);\n\n            if (config.progress) {\n              config.progress(delta, total);\n            }\n\n            if (!done) {\n              _context23.next = 17;\n              break;\n            }\n\n            if (config.total) {\n              config.total(total);\n            }\n\n            _context23.next = 16;\n            return __await(_value8);\n\n          case 16:\n            return _context23.abrupt(\"return\", _context23.sent);\n\n          case 17:\n            _context23.next = 19;\n            return __await(_value8);\n\n          case 19:\n            _context23.next = 21;\n            return _context23.sent;\n\n          case 21:\n            _context23.next = 2;\n            break;\n\n          case 23:\n          case \"end\":\n            return _context23.stop();\n        }\n      }\n    }, _asyncTime_1);\n  }));\n}\n\nfunction _syncTime(config, iterable) {\n  var itr, total, start, _itr$next, _value9, done, delta;\n\n  return _regenerator[\"default\"].wrap(function _syncTime$(_context24) {\n    while (1) {\n      switch (_context24.prev = _context24.next) {\n        case 0:\n          itr = iterable[Symbol.iterator]();\n          total = [0, 0];\n\n        case 2:\n          if (!true) {\n            _context24.next = 15;\n            break;\n          }\n\n          start = process.hrtime();\n          _itr$next = itr.next(), _value9 = _itr$next.value, done = _itr$next.done;\n          delta = process.hrtime(start);\n          total = addTime(total, delta);\n\n          if (config.progress) {\n            config.progress(delta, total);\n          }\n\n          if (!done) {\n            _context24.next = 11;\n            break;\n          }\n\n          if (config.total) {\n            config.total(total);\n          }\n\n          return _context24.abrupt(\"return\", _value9);\n\n        case 11:\n          _context24.next = 13;\n          return _value9;\n\n        case 13:\n          _context24.next = 2;\n          break;\n\n        case 15:\n        case \"end\":\n          return _context24.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction time() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var iterable = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (iterable === undefined) {\n    return function (curriedIterable) {\n      return time(config, curriedIterable);\n    };\n  }\n\n  if (iterable[Symbol.asyncIterator] !== undefined) {\n    return _asyncTime(config, iterable);\n  } else {\n    return _syncTime(config, iterable);\n  }\n}\n\nfunction _transform(concurrency, func, iterable) {\n  var iterator = getIterator(iterable);\n  var resultQueue = [];\n  var readQueue = [];\n  var ended = false;\n  var reading = false;\n  var inflightCount = 0;\n  var lastError = null;\n\n  function fulfillReadQueue() {\n    while (readQueue.length > 0 && resultQueue.length > 0) {\n      var _readQueue$shift4 = readQueue.shift(),\n          resolve = _readQueue$shift4.resolve;\n\n      var _value10 = resultQueue.shift();\n\n      resolve({\n        done: false,\n        value: _value10\n      });\n    }\n\n    while (readQueue.length > 0 && inflightCount === 0 && ended) {\n      var _readQueue$shift5 = readQueue.shift(),\n          resolve = _readQueue$shift5.resolve,\n          reject = _readQueue$shift5.reject;\n\n      if (lastError) {\n        reject(lastError);\n        lastError = null;\n      } else {\n        resolve({\n          done: true,\n          value: undefined\n        });\n      }\n    }\n  }\n\n  function fillQueue() {\n    return _fillQueue3.apply(this, arguments);\n  }\n\n  function _fillQueue3() {\n    _fillQueue3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee8() {\n      var _ref7, _done, _value11;\n\n      return _regenerator[\"default\"].wrap(function _callee8$(_context25) {\n        while (1) {\n          switch (_context25.prev = _context25.next) {\n            case 0:\n              if (!ended) {\n                _context25.next = 3;\n                break;\n              }\n\n              fulfillReadQueue();\n              return _context25.abrupt(\"return\");\n\n            case 3:\n              if (!reading) {\n                _context25.next = 5;\n                break;\n              }\n\n              return _context25.abrupt(\"return\");\n\n            case 5:\n              if (!(inflightCount + resultQueue.length >= concurrency)) {\n                _context25.next = 7;\n                break;\n              }\n\n              return _context25.abrupt(\"return\");\n\n            case 7:\n              reading = true;\n              inflightCount++;\n              _context25.prev = 9;\n              _context25.next = 12;\n              return iterator.next();\n\n            case 12:\n              _ref7 = _context25.sent;\n              _done = _ref7.done;\n              _value11 = _ref7.value;\n\n              if (_done) {\n                ended = true;\n                inflightCount--;\n                fulfillReadQueue();\n              } else {\n                mapAndQueue(_value11);\n              }\n\n              _context25.next = 24;\n              break;\n\n            case 18:\n              _context25.prev = 18;\n              _context25.t0 = _context25[\"catch\"](9);\n              ended = true;\n              inflightCount--;\n              lastError = _context25.t0;\n              fulfillReadQueue();\n\n            case 24:\n              reading = false;\n              fillQueue();\n\n            case 26:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n      }, _callee8, null, [[9, 18]]);\n    }));\n    return _fillQueue3.apply(this, arguments);\n  }\n\n  function mapAndQueue(_x9) {\n    return _mapAndQueue2.apply(this, arguments);\n  }\n\n  function _mapAndQueue2() {\n    _mapAndQueue2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee9(itrValue) {\n      var _value12;\n\n      return _regenerator[\"default\"].wrap(function _callee9$(_context26) {\n        while (1) {\n          switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.prev = 0;\n              _context26.next = 3;\n              return func(itrValue);\n\n            case 3:\n              _value12 = _context26.sent;\n              resultQueue.push(_value12);\n              _context26.next = 11;\n              break;\n\n            case 7:\n              _context26.prev = 7;\n              _context26.t0 = _context26[\"catch\"](0);\n              ended = true;\n              lastError = _context26.t0;\n\n            case 11:\n              inflightCount--;\n              fulfillReadQueue();\n              fillQueue();\n\n            case 14:\n            case \"end\":\n              return _context26.stop();\n          }\n        }\n      }, _callee9, null, [[0, 7]]);\n    }));\n    return _mapAndQueue2.apply(this, arguments);\n  }\n\n  function next() {\n    return _next4.apply(this, arguments);\n  }\n\n  function _next4() {\n    _next4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee10() {\n      var deferred, value;\n      return _regenerator[\"default\"].wrap(function _callee10$(_context27) {\n        while (1) {\n          switch (_context27.prev = _context27.next) {\n            case 0:\n              if (!(resultQueue.length === 0)) {\n                _context27.next = 5;\n                break;\n              }\n\n              deferred = defer();\n              readQueue.push(deferred);\n              fillQueue();\n              return _context27.abrupt(\"return\", deferred.promise);\n\n            case 5:\n              value = resultQueue.shift();\n              fillQueue();\n              return _context27.abrupt(\"return\", {\n                done: false,\n                value: value\n              });\n\n            case 8:\n            case \"end\":\n              return _context27.stop();\n          }\n        }\n      }, _callee10);\n    }));\n    return _next4.apply(this, arguments);\n  }\n\n  var asyncIterableIterator = _defineProperty({\n    next: next\n  }, Symbol.asyncIterator, function () {\n    return asyncIterableIterator;\n  });\n\n  return asyncIterableIterator;\n}\n\nfunction transform(concurrency, func, iterable) {\n  if (func === undefined) {\n    return function (curriedFunc, curriedIterable) {\n      return curriedIterable ? transform(concurrency, curriedFunc, curriedIterable) : transform(concurrency, curriedFunc);\n    };\n  }\n\n  if (iterable === undefined) {\n    return function (curriedIterable) {\n      return transform(concurrency, func, curriedIterable);\n    };\n  }\n\n  return _transform(concurrency, func, iterable);\n}\n\nfunction once(event, stream) {\n  return new Promise(function (resolve) {\n    stream.once(event, resolve);\n  });\n}\n\nfunction _writeToStream(_x10, _x11) {\n  return _writeToStream2.apply(this, arguments);\n}\n\nfunction _writeToStream2() {\n  _writeToStream2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee15(stream, iterable) {\n    var e_1, _a, errorListener, error, errorPromise, iterable_1, iterable_1_1, _value14;\n\n    return _regenerator[\"default\"].wrap(function _callee15$(_context32) {\n      while (1) {\n        switch (_context32.prev = _context32.next) {\n          case 0:\n            errorPromise = new Promise(function (resolve, reject) {\n              errorListener = function errorListener(err) {\n                error = err;\n                reject(err);\n              };\n\n              stream.once('error', errorListener);\n            });\n            _context32.prev = 1;\n            iterable_1 = __asyncValues(iterable);\n\n          case 3:\n            _context32.next = 5;\n            return iterable_1.next();\n\n          case 5:\n            iterable_1_1 = _context32.sent;\n\n            if (iterable_1_1.done) {\n              _context32.next = 15;\n              break;\n            }\n\n            _value14 = iterable_1_1.value;\n\n            if (!(stream.write(_value14) === false)) {\n              _context32.next = 11;\n              break;\n            }\n\n            _context32.next = 11;\n            return Promise.race([errorPromise, once('drain', stream)]);\n\n          case 11:\n            if (!error) {\n              _context32.next = 13;\n              break;\n            }\n\n            return _context32.abrupt(\"return\", errorPromise);\n\n          case 13:\n            _context32.next = 3;\n            break;\n\n          case 15:\n            _context32.next = 20;\n            break;\n\n          case 17:\n            _context32.prev = 17;\n            _context32.t0 = _context32[\"catch\"](1);\n            e_1 = {\n              error: _context32.t0\n            };\n\n          case 20:\n            _context32.prev = 20;\n            _context32.prev = 21;\n\n            if (!(iterable_1_1 && !iterable_1_1.done && (_a = iterable_1[\"return\"]))) {\n              _context32.next = 25;\n              break;\n            }\n\n            _context32.next = 25;\n            return _a.call(iterable_1);\n\n          case 25:\n            _context32.prev = 25;\n\n            if (!e_1) {\n              _context32.next = 28;\n              break;\n            }\n\n            throw e_1.error;\n\n          case 28:\n            return _context32.finish(25);\n\n          case 29:\n            return _context32.finish(20);\n\n          case 30:\n            stream.removeListener('error', errorListener);\n\n            if (!error) {\n              _context32.next = 33;\n              break;\n            }\n\n            return _context32.abrupt(\"return\", errorPromise);\n\n          case 33:\n          case \"end\":\n            return _context32.stop();\n        }\n      }\n    }, _callee15, null, [[1, 17, 20, 30], [21,, 25, 29]]);\n  }));\n  return _writeToStream2.apply(this, arguments);\n}\n\nfunction writeToStream(stream, iterable) {\n  if (iterable === undefined) {\n    return function (curriedIterable) {\n      return _writeToStream(stream, curriedIterable);\n    };\n  }\n\n  return _writeToStream(stream, iterable);\n} /// <reference lib=\"esnext.asynciterable\" />\n\n\nif (Symbol.asyncIterator === undefined) {\n  Symbol.asyncIterator = Symbol[\"for\"]('asyncIterator');\n}","\"use strict\";\n\n// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","module.exports = require(\"regenerator-runtime\");\n","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && _typeof(value) === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\n(typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","\"use strict\";\n\nmodule.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};"],"sourceRoot":""}