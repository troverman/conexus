{"version":3,"sources":["/Users/henriquedias/Code/hacdias/human-to-milliseconds/webpack/universalModuleDefinition","/Users/henriquedias/Code/hacdias/human-to-milliseconds/webpack/bootstrap","/Users/henriquedias/Code/hacdias/human-to-milliseconds/src/index.js"],"names":["whole","pieces","measure","multipliers","ns","us","µs","ms","s","m","h","analyse","time","unit","match","substring","length","parseFloat","module","exports","Error","test","reduce","sum","currentVal"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;AClFA;;AAEA,MAAMA,KAAK,GAAG,uCAAd;AACA,MAAMC,MAAM,GAAG,qCAAf;AACA,MAAMC,OAAO,GAAG,sBAAhB;AAEA,MAAMC,WAAW,GAAG;AAClBC,IAAE,EAAE,IADc;AAElBC,IAAE,EAAE,KAFc;AAGlBC,IAAE,EAAE,KAHc;AAIlBC,IAAE,EAAE,CAJc;AAKlBC,GAAC,EAAE,IALe;AAMlBC,GAAC,EAAE,KANe;AAOlBC,GAAC,EAAE;AAPe,CAApB;;AAUA,SAASC,OAAT,CAAkBC,IAAlB,EAAwB;AACtB,MAAIC,IAAI,GAAGD,IAAI,CAACE,KAAL,CAAWZ,OAAX,EAAoB,CAApB,CAAX;AACAU,MAAI,GAAGA,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBH,IAAI,CAACI,MAAL,GAAcH,IAAI,CAACG,MAArC,CAAP;AAEA,SAAOC,UAAU,CAACL,IAAD,CAAV,GAAmBT,WAAW,CAACU,IAAD,CAArC;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiB,UAAUP,IAAV,EAAgB;AAC/B,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIQ,KAAJ,CAAU,qCAAV,CAAN;AACD;;AAED,MAAI,CAACpB,KAAK,CAACqB,IAAN,CAAWT,IAAX,CAAL,EAAuB;AACrB,UAAM,IAAIQ,KAAJ,CAAU,cAAV,CAAN;AACD;;AAED,SAAOR,IAAI,CAACE,KAAL,CAAWb,MAAX,EAAmBqB,MAAnB,CAA0B,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACpD,WAAOD,GAAG,GAAGZ,OAAO,CAACa,UAAD,CAApB;AACD,GAFM,EAEJ,CAFI,CAAP;AAGD,CAZD,C","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"HumanToMilliseconds\"] = factory();\n\telse\n\t\troot[\"HumanToMilliseconds\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict'\n\nconst whole = /^((\\d+(\\.\\d+)*)(ns|ms|us|µs|m|s|h))+$/\nconst pieces = /((\\d+(\\.\\d+)*)(ns|ms|us|µs|m|s|h))/g\nconst measure = /(ns|ms|us|µs|m|s|h)/g\n\nconst multipliers = {\n  ns: 1e-6,\n  us: 0.001,\n  µs: 0.001,\n  ms: 1,\n  s: 1000,\n  m: 60000,\n  h: 3.6e+6\n}\n\nfunction analyse (time) {\n  let unit = time.match(measure)[0]\n  time = time.substring(0, time.length - unit.length)\n\n  return parseFloat(time) * multipliers[unit]\n}\n\nmodule.exports = function (time) {\n  if (typeof time !== 'string') {\n    throw new Error('the first argument must be a string')\n  }\n\n  if (!whole.test(time)) {\n    throw new Error('invalid time')\n  }\n\n  return time.match(pieces).reduce((sum, currentVal) => {\n    return sum + analyse(currentVal)\n  }, 0)\n}\n"],"sourceRoot":""}